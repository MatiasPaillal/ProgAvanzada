Index: src/main/java/com/mylyrics/div/ConexionBD.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mylyrics.div;\r\n\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.SQLException;\r\n\r\n/**\r\n *\r\n * @author matias\r\n */\r\n\r\n\r\nclass ConexionBD {\r\n\r\n    public static final String usuario = \"root\";\r\n    public static final String clave = \"\";\r\n    public static final String url = \"jdbc:mysql://localhost:3306/tienda\";\r\n    public static final String driver = \"com.mysql.jdbc.Driver\";\r\n    public static Connection con;\r\n\r\n\r\n    public ConexionBD() {\r\n        con = null;\r\n        try {\r\n            Class.forName(driver);\r\n            con = DriverManager.getConnection(url, usuario, clave);\r\n            if (con != null) {\r\n                System.out.println(\"conexion establecida\");\r\n            }\r\n        } catch (ClassNotFoundException | SQLException e) {\r\n            System.out.println(\"error al conectar\");\r\n        }\r\n    }\r\n\r\n\r\n    public Connection getConexion() {\r\n\r\n        return con;\r\n\r\n    }\r\n\r\n    public void desconectar() {\r\n        con = null;\r\n        if (con == null) {\r\n            System.out.println(\"conexion termindad\");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/mylyrics/div/ConexionBD.java b/src/main/java/com/mylyrics/div/ConexionBD.java
--- a/src/main/java/com/mylyrics/div/ConexionBD.java	(revision 6a198200c2936fc28efa96a30d5811ead1d0d95d)
+++ b/src/main/java/com/mylyrics/div/ConexionBD.java	(date 1633812845360)
@@ -15,7 +15,7 @@
 
     public static final String usuario = "root";
     public static final String clave = "";
-    public static final String url = "jdbc:mysql://localhost:3306/tienda";
+    public static final String url = "jdbc:mysql://localhost:3306/mylyrics";
     public static final String driver = "com.mysql.jdbc.Driver";
     public static Connection con;
 
Index: src/main/java/com/mylyrics/div/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mylyrics.div;\r\n\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class Main {\r\n    public static void main(String[] args){\r\n\r\n        ConexionBD con= new ConexionBD();\r\n\r\n\r\n\r\n}}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/mylyrics/div/Main.java b/src/main/java/com/mylyrics/div/Main.java
--- a/src/main/java/com/mylyrics/div/Main.java	(revision 6a198200c2936fc28efa96a30d5811ead1d0d95d)
+++ b/src/main/java/com/mylyrics/div/Main.java	(date 1633815227445)
@@ -5,10 +5,10 @@
 import java.util.regex.Pattern;
 
 public class Main {
-    public static void main(String[] args){
+    public static void main(String[] args) {
 
-        ConexionBD con= new ConexionBD();
+        ConexionBD con = new ConexionBD();
 
 
-
-}}
+    }
+}
Index: src/test/java/com/mylyrics/test/testUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mylyrics.test;\r\n\r\nimport com.mylyrics.div.Usuario;\r\nimport org.junit.jupiter.api.Assertions;\r\nimport org.junit.jupiter.api.BeforeAll;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.time.DateTimeException;\r\nimport java.time.LocalDate;\r\nimport java.time.Period;\r\n\r\n\r\npublic class testUser {\r\n    public static Usuario user;\r\n\r\n    @BeforeAll\r\n    static void setUp() {\r\n        user = new Usuario();\r\n    }\r\n\r\n    @Test\r\n    public void setNombreTest() {\r\n\r\n        Usuario usuario = new Usuario();\r\n        boolean nose = usuario.cambiarNombre(\"holaaaa\");\r\n        Assertions.assertTrue(nose);\r\n    }\r\n\r\n\r\n    @Test\r\n    public void verificarLargoPassword() {\r\n        //  La contraseña deberá tener a lo menos 8 caracteres.\r\n        user.setPassword(\"holahola\");\r\n        int largoPass = user.getPassword().length();\r\n\r\n        Assertions.assertTrue(largoPass >= 8);\r\n    }\r\n\r\n    @Test\r\n    public void verificarNumsPassword() {\r\n        //  Debe tener a lo menos dos números.\r\n        user.setPassword(\"hola1234\");\r\n        boolean hasNumbers = false;\r\n        int count = 0;\r\n        for (Character x : user.getPassword().toCharArray()) {\r\n            if (Character.isDigit(x)) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        Assertions.assertTrue(count >= 2);\r\n    }\r\n\r\n    @Test\r\n    public void verificarEdad() {\r\n        //El Usuario debe tener más de 13 años.\r\n        int anio, mes, dia, edad;\r\n        anio = 2002;\r\n        mes = 04;\r\n        dia = 02;\r\n\r\n        user.setFechaNacimiento(dia, mes, anio);\r\n        LocalDate now = LocalDate.now();\r\n\r\n        Period periodo = Period.between(user.getFechaNacimiento(), now);\r\n        edad = periodo.getYears();\r\n\r\n        Assertions.assertTrue(edad >= 13);\r\n    }\r\n\r\n    @Test\r\n    public void verificarFecha() {\r\n        //Verificar que la fecha ingresada sea correcta.\r\n        boolean isCorrect;\r\n        int anio, mes, dia;\r\n        anio = 2002;\r\n        mes = 02;\r\n        dia = 28;\r\n\r\n        try {\r\n            user.setFechaNacimiento(dia, mes, anio);\r\n            isCorrect = true;\r\n        } catch (DateTimeException e) {\r\n            isCorrect = false;\r\n        }\r\n\r\n        Assertions.assertTrue(isCorrect);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/com/mylyrics/test/testUser.java b/src/test/java/com/mylyrics/test/testUser.java
--- a/src/test/java/com/mylyrics/test/testUser.java	(revision 6a198200c2936fc28efa96a30d5811ead1d0d95d)
+++ b/src/test/java/com/mylyrics/test/testUser.java	(date 1633812446833)
@@ -40,7 +40,7 @@
     public void verificarNumsPassword() {
         //  Debe tener a lo menos dos números.
         user.setPassword("hola1234");
-        boolean hasNumbers = false;
+
         int count = 0;
         for (Character x : user.getPassword().toCharArray()) {
             if (Character.isDigit(x)) {
Index: src/main/java/com/mylyrics/div/Usuario.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mylyrics.div;\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\nimport java.time.DateTimeException;\r\nimport java.time.LocalDate;\r\nimport java.time.Period;\r\nimport java.util.Scanner;\r\n\r\npublic class Usuario {\r\n\r\n    private String nombre;\r\n    private String password;\r\n    private String nombreUsuario;\r\n    private LocalDate fechaNacimiento;\r\n    public Usuario() {\r\n\r\n    }\r\n\r\n    public boolean cambiarNombre(String nombreUsuario){\r\n        boolean ejecucion=false;\r\n        Pattern pat = Pattern.compile(\"^[a-zA-Z0-9]*$\");\r\n        Matcher mat = pat.matcher(nombreUsuario);\r\n        if (mat.matches()) {\r\n            this.nombre=nombreUsuario;\r\n            return true;\r\n\r\n        } else {\r\n            return false;\r\n        }\r\n  }\r\n  /*\r\n    public boolean cambiarNombre2(){\r\n        Scanner teclado = new Scanner(System.in);\r\n        System.out.println(\"Ingrese nuevo Nombre\");\r\n        String nombreUsuario= teclado.next();\r\n\r\n        boolean ejecucion=false;\r\n        do {\r\n            Pattern pat = Pattern.compile(\"^[a-zA-Z0-9]*$\");\r\n            Matcher mat = pat.matcher(nombreUsuario);\r\n            if (mat.matches()) {\r\n                this.nombre = nombreUsuario;\r\n                return true;\r\n\r\n            }\r\n        }while(ejecucion==false);\r\n        return ejecucion;\r\n    }\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    public void setPassword() {\r\n        String pass;\r\n        int count = 0;\r\n        Scanner teclado = new Scanner(System.in);\r\n\r\n        do {\r\n            System.out.println(\"Ingrese la contraseña: \");\r\n            pass = teclado.nextLine();\r\n\r\n            if (pass.length() < 8) {\r\n                System.out.println(\"La contraseña debe tener a lo menos 8 caracteres.\");\r\n            }\r\n\r\n            for (Character x : this.getPassword().toCharArray()) {\r\n                if (Character.isDigit(x)) {\r\n                    count++;\r\n                }\r\n            }\r\n            if (count < 2) {\r\n                System.out.println(\"La contraseña debe tener a lo menos 2 números.\");\r\n            }\r\n\r\n        } while (pass.length() < 8 && count < 2);\r\n\r\n        this.password = pass;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return this.password;\r\n    }\r\n\r\n    public void setFechaNacimiento() {\r\n        Scanner teclado = new Scanner(System.in);\r\n        int dia, mes, anio, edad = 0;\r\n\r\n        do {\r\n\r\n            System.out.println(\"Ingrese su fecha de nacimiento (Ej. 08/10/2021)\");\r\n            System.out.print(\"Día: \");\r\n            dia = teclado.nextInt();\r\n\r\n            System.out.print(\"Mes: \");\r\n            mes = teclado.nextInt();\r\n\r\n            System.out.print(\"Año: \");\r\n            anio = teclado.nextInt();\r\n\r\n            try {\r\n                LocalDate fechaNacimiento = LocalDate.of(anio, mes, dia);\r\n                LocalDate now = LocalDate.now();\r\n\r\n                Period periodo = Period.between(fechaNacimiento, now);\r\n                edad = periodo.getYears();\r\n            } catch (DateTimeException e) {\r\n                System.out.println(\"La fecha ingresada es incorrecta.\");\r\n            }\r\n\r\n\r\n        } while (edad >= 13);\r\n\r\n    }\r\n\r\n    public void setFechaNacimiento(int dia, int mes, int anio) {\r\n        this.fechaNacimiento = LocalDate.of(anio, mes, dia);\r\n    }\r\n\r\n    public LocalDate getFechaNacimiento() {\r\n        return fechaNacimiento;\r\n    }\r\n\r\n    public String getStringFechaNacimiento() {\r\n        int dia, mes, anio;\r\n        dia = this.fechaNacimiento.getDayOfMonth();\r\n        mes = this.fechaNacimiento.getMonthValue();\r\n        anio = this.fechaNacimiento.getYear();\r\n        return dia + \"/\" + mes + \"/\" + anio;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/mylyrics/div/Usuario.java b/src/main/java/com/mylyrics/div/Usuario.java
--- a/src/main/java/com/mylyrics/div/Usuario.java	(revision 6a198200c2936fc28efa96a30d5811ead1d0d95d)
+++ b/src/main/java/com/mylyrics/div/Usuario.java	(date 1633814979499)
@@ -1,4 +1,5 @@
 package com.mylyrics.div;
+
 import java.util.Scanner;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -14,22 +15,23 @@
     private String password;
     private String nombreUsuario;
     private LocalDate fechaNacimiento;
+
     public Usuario() {
 
     }
 
-    public boolean cambiarNombre(String nombreUsuario){
-        boolean ejecucion=false;
+    public boolean cambiarNombre(String nombreUsuario) {
+        boolean ejecucion = false;
         Pattern pat = Pattern.compile("^[a-zA-Z0-9]*$");
         Matcher mat = pat.matcher(nombreUsuario);
         if (mat.matches()) {
-            this.nombre=nombreUsuario;
+            this.nombre = nombreUsuario;
             return true;
 
         } else {
             return false;
         }
-  }
+    }
   /*
     public boolean cambiarNombre2(){
         Scanner teclado = new Scanner(System.in);
@@ -52,12 +54,6 @@
 */
 
 
-
-
-
-
-
-
     public void setPassword() {
         String pass;
         int count = 0;
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_13\" default=\"true\" project-jdk-name=\"13\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 6a198200c2936fc28efa96a30d5811ead1d0d95d)
+++ b/.idea/misc.xml	(date 1633812681104)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_13" default="true" project-jdk-name="13" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_16" default="true" project-jdk-name="16" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
